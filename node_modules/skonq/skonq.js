var nqq = [];
var maxconn = 1;
var currentconn = 0;
var processing = 0;
var nq = function(fun,args){
  nqq.push({fun:fun,args:args});
  if(nqq.length == 1){
    nqcb();
  }
};
var id = 0;
var nqcb = function(){
  if(currentconn >= maxconn || nqq.length == 0){ return; }
  var f = nqq.shift(); 
  if(f && typeof f.fun == "function"){
    id++;
    var l = 1;
    var tid = function(){
      currentconn-=l;
      l = 0;
      nqcb();
    };
    f.fun(f.args,tid);
    console.log("started fun %d",id);
    //console.log("\tnqcb %d : %d , %d  %s",currentconn,maxconn,nqq.length,currentconn >= maxconn || (nqq.length+1) == 0);
    currentconn++;
  }else{
    nqcb();
  }
};

module.exports.nq = nq;
module.exports.setconcurrency = function(c){maxconn = c;};
